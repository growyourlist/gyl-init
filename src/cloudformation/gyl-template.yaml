Parameters:
  GylKeyName:
    Description: The EC2 Key Pair to allow SSH access to the GylMainEc2 instance
    Type: AWS::EC2::KeyPair::KeyName
  GylVersion:
    Description: GYL Version
    Type: String
  LambdaBucketName:
    Description: Lambda Bucket
    Type: String
  ApiAuthKeyHash:
    Description: Key for authorizing API requests
    Type: String
  DbTablePrefix:
    Description: Prefix for DynamoDB tables
    Type: String
  SesSourceEmail:
    Description: Source email used by SES
    Type: String
  AdminEmail:
    Description: Email to receive errors and other GYL operating information
    Type: String
  QueueUserAccessKeyId:
    Description: The id of the access key used by GYL Queue system
    Type: String
  QueueUserSecretAccessKey:
    Description: The secret access key used by GYL Queue system
    Type: String
  BroadcastUserAccessKeyId:
    Description: The id of the access key used by GYL Broadcast system
    Type: String
  BroadcastUserSecretAccessKey:
    Description: The secret access key used by GYL Broadcast system
    Type: String
  GylSettingsTableArn:
    Description: Arn of the Settings DynamoDB table
    Type: String
  GylSubscribersTableArn:
    Description: Arn of the Subscribers DynamoDB table
    Type: String
  GylQueueTableArn:
    Description: Arn of the Queue DynamoDB table
    Type: String
  GylTemplateHistoryTableArn:
    Description: Arn of the Template History DynamoDB table
    Type: String
  GylAutoresponderHistoryTableArn:
    Description: Arn of the Autoresponder History DynamoDB table
    Type: String
  GylAdminApiStackTemplateUrl:
    Description: The url of the admin api stack.
    Type: String
  GylEc2InstanceType:
    Description: The instance of the EC2 to use; e.g. t2.micro
    Type: String
    Default: t2.micro
    AllowedValues:
      [
        t2.nano,
        t2.micro,
        t2.small,
        t2.medium,
        t2.large,
        t2.xlarge,
        t2.2xlarge,
        t3a.nano,
        t3a.micro,
        t3a.small,
        t3a.medium,
        t3a.large,
        t3a.xlarge,
        t3a.2xlarge,
        t3.nano,
        t3.micro,
        t3.small,
        t3.medium,
        t3.large,
        t3.xlarge,
        t3.2xlarge,
        m5ad.large,
        m5ad.xlarge,
        m5ad.2xlarge,
        m5ad.4xlarge,
        m5ad.12xlarge,
        m5ad.24xlarge,
        m5a.large,
        m5a.xlarge,
        m5a.2xlarge,
        m5a.4xlarge,
        m5a.8xlarge,
        m5a.12xlarge,
        m5a.16xlarge,
        m5a.24xlarge,
        m5d.large,
        m5d.xlarge,
        m5d.2xlarge,
        m5d.4xlarge,
        m5d.8xlarge,
        m5d.12xlarge,
        m5d.16xlarge,
        m5d.24xlarge,
        m5d.metal,
        m5n.large,
        m5n.xlarge,
        m5n.2xlarge,
        m5n.4xlarge,
        m5n.8xlarge,
        m5n.12xlarge,
        m5n.16xlarge,
        m5dn.large,
        m5dn.xlarge,
        m5dn.2xlarge,
        m5dn.4xlarge,
        m5dn.8xlarge,
        m5dn.12xlarge,
        m5dn.16xlarge,
        m5n.24xlarge,
        m5dn.24xlarge,
        r5n.large,
        r5n.xlarge,
        r5n.2xlarge,
        r5n.4xlarge,
        r5n.8xlarge,
        r5n.12xlarge,
        r5n.16xlarge,
        r5dn.large,
        r5dn.xlarge,
        r5dn.2xlarge,
        r5dn.4xlarge,
        r5dn.8xlarge,
        r5dn.12xlarge,
        r5dn.16xlarge,
        r5n.24xlarge,
        r5dn.24xlarge,
        m5.large,
        m5.xlarge,
        m5.2xlarge,
        m5.4xlarge,
        m5.8xlarge,
        m5.12xlarge,
        m5.16xlarge,
        m5.24xlarge,
        m5.metal,
        m4.large,
        m4.xlarge,
        m4.2xlarge,
        m4.4xlarge,
        m4.10xlarge,
        m4.16xlarge,
        a1.medium,
        a1.large,
        a1.xlarge,
        a1.2xlarge,
        a1.4xlarge,
        a1.metal,
        c5n.large,
        c5n.xlarge,
        c5n.2xlarge,
        c5n.4xlarge,
        c5n.9xlarge,
        c5n.18xlarge,
        c5n.metal,
        c5d.large,
        c5d.xlarge,
        c5d.2xlarge,
        c5d.4xlarge,
        c5d.9xlarge,
        c5d.12xlarge,
        c5d.18xlarge,
        c5d.24xlarge,
        c5d.metal,
        c5.large,
        c5.xlarge,
        c5.2xlarge,
        c5.4xlarge,
        c5.9xlarge,
        c5.12xlarge,
        c5.18xlarge,
        c5.24xlarge,
        c5.metal,
        c4.large,
        c4.xlarge,
        c4.2xlarge,
        c4.4xlarge,
        c4.8xlarge,
        f1.2xlarge,
        f1.4xlarge,
        f1.16xlarge,
        g2.2xlarge,
        g2.8xlarge,
        g3s.xlarge,
        g3.4xlarge,
        g3.8xlarge,
        g3.16xlarge,
        g4dn.xlarge,
        g4dn.2xlarge,
        g4dn.4xlarge,
        g4dn.8xlarge,
        g4dn.12xlarge,
        g4dn.16xlarge,
        p2.xlarge,
        p2.8xlarge,
        p2.16xlarge,
        p3.2xlarge,
        p3.8xlarge,
        p3.16xlarge,
        p3dn.24xlarge,
        inf1.xlarge,
        inf1.2xlarge,
        inf1.6xlarge,
        inf1.24xlarge,
        r5ad.large,
        r5ad.xlarge,
        r5ad.2xlarge,
        r5ad.4xlarge,
        r5ad.12xlarge,
        r5ad.24xlarge,
        r5a.large,
        r5a.xlarge,
        r5a.2xlarge,
        r5a.4xlarge,
        r5a.8xlarge,
        r5a.12xlarge,
        r5a.16xlarge,
        r5a.24xlarge,
        r5d.large,
        r5d.xlarge,
        r5d.2xlarge,
        r5d.4xlarge,
        r5d.8xlarge,
        r5d.12xlarge,
        r5d.16xlarge,
        r5d.24xlarge,
        r5d.metal,
        r5.large,
        r5.xlarge,
        r5.2xlarge,
        r5.4xlarge,
        r5.8xlarge,
        r5.12xlarge,
        r5.16xlarge,
        r5.24xlarge,
        r5.metal,
        r4.large,
        r4.xlarge,
        r4.2xlarge,
        r4.4xlarge,
        r4.8xlarge,
        r4.16xlarge,
        x1.16xlarge,
        x1.32xlarge,
        x1e.xlarge,
        x1e.2xlarge,
        x1e.4xlarge,
        x1e.8xlarge,
        x1e.16xlarge,
        x1e.32xlarge,
        z1d.large,
        z1d.xlarge,
        z1d.2xlarge,
        z1d.3xlarge,
        z1d.6xlarge,
        z1d.12xlarge,
        z1d.metal,
        d2.xlarge,
        d2.2xlarge,
        d2.4xlarge,
        d2.8xlarge,
        i2.xlarge,
        i2.2xlarge,
        i2.4xlarge,
        i2.8xlarge,
        h1.2xlarge,
        h1.4xlarge,
        h1.8xlarge,
        h1.16xlarge,
        i3.large,
        i3.xlarge,
        i3.2xlarge,
        i3.4xlarge,
        i3.8xlarge,
        i3.16xlarge,
        i3.metal,
        i3en.large,
        i3en.xlarge,
        i3en.2xlarge,
        i3en.3xlarge,
        i3en.6xlarge,
        i3en.12xlarge,
        i3en.24xlarge,
        i3en.metal,
      ]

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-062f7200baf2fa504
    us-east-2:
      AMI: ami-02ccb28830b645a41
    us-west-1:
      AMI: ami-03caa3f860895f82e
    us-west-2:
      AMI: ami-04590e7389a6e577c
    sa-east-1:
      AMI: ami-09de7b4017733e2af
    eu-north-1:
      AMI: ami-0662eb9b9b8685935
    eu-west-3:
      AMI: ami-007fae589fdf6e955
    eu-west-2:
      AMI: ami-0089b31e09ac3fffc
    eu-west-1:
      AMI: ami-0713f98de93617bb4
    eu-central-1:
      AMI: ami-07cda0db070313c52
    ca-central-1:
      AMI: ami-0a269ca7cc3e3beff
    ap-northeast-1:
      AMI: ami-011facbea5ec0363b
    ap-southeast-2:
      AMI: ami-0b8b10b5bf11f3a22
    ap-southeast-1:
      AMI: ami-05c64f7b4062b0a21

Resources:
  #VPC for the EC2
  GylMainVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsHostnames: true

  GylMainSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref GylMainVpc
      CidrBlock: '10.0.0.0/24'

  GylMainInternetGateway:
    Type: AWS::EC2::InternetGateway

  GylMainGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref GylMainVpc
      InternetGatewayId: !Ref GylMainInternetGateway

  GylMainRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref GylMainVpc

  GylMainRoute:
    Type: AWS::EC2::Route
    DependsOn: GylMainGatewayAttachment
    Properties:
      RouteTableId: !Ref GylMainRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref GylMainInternetGateway

  GylMainSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref GylMainSubnet
      RouteTableId: !Ref GylMainRouteTable

  GylMainNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref GylMainVpc

  GylMainInboundSSHNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref GylMainNetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
      PortRange:
        From: 22
        To: 22

  GylMainInboundResponsePortsNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref GylMainNetworkAcl
      RuleNumber: 101
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
      PortRange:
        From: 1024
        To: 65535

  GylMainOutboundHTTPNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref GylMainNetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
      PortRange:
        From: 80
        To: 80

  GylMainOutboundHTTPSNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref GylMainNetworkAcl
      RuleNumber: 101
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
      PortRange:
        From: 443
        To: 443

  GylMainOutboundResponsePortsNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref GylMainNetworkAcl
      RuleNumber: 102
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
      PortRange:
        From: 1024
        To: 65535

  GylMainSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref GylMainSubnet
      NetworkAclId: !Ref GylMainNetworkAcl

  GylMainIPAddress:
    Type: AWS::EC2::EIP
    DependsOn: GylMainGatewayAttachment
    Properties:
      Domain: vpc
      InstanceId: !Ref GylMainEc2

  # EC2
  GylMainEc2:
    Type: 'AWS::EC2::Instance'
    DependsOn: GylMainGatewayAttachment
    Properties:
      InstanceType: !Ref GylEc2InstanceType
      KeyName: !Ref GylKeyName
      NetworkInterfaces:
        - GroupSet:
            - !Ref GylMainEc2SecurityGroup
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: !Ref GylMainSubnet
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      BlockDeviceMappings:
        - DeviceName: '/dev/xvda'
          Ebs:
            VolumeType: 'gp2'
            VolumeSize: '8'
            DeleteOnTermination: 'true'
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v'
            - ' --stack '
            - !Ref 'AWS::StackName'
            - ' --resource GylMainEc2'
            - ' --region '
            - !Ref 'AWS::Region'
            - ' --configsets installGylDependencies'
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          installGylDependencies:
            - installGylDependencies
        installGylDependencies:
          files:
            '/tmp/gyl-queue.env':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: !Sub
                - |
                  SOURCE_EMAIL=${SourceEmail}
                  FALLBACK_SOURCE_EMAIL=${FallbackSourceEmail}
                  UNSUBSCRIBE_LINK_TEMPLATE=${UnsubscribeLinkTemplate}
                  DB_TABLE_PREFIX="${DbPrefix}"
                  AWS_REGION="${AwsRegion}"
                  AWS_ACCESS_KEY_ID=${AwsAccessKeyId}
                  AWS_SECRET_ACCESS_KEY=${AwsSecretAccessKey}

                - SourceEmail: !Ref SesSourceEmail
                  FallbackSourceEmail: !Ref SesSourceEmail
                  UnsubscribeLinkTemplate: 'test'
                  DbPrefix: !Ref DbTablePrefix
                  AwsRegion: !Ref AWS::Region
                  AwsAccessKeyId: !Ref QueueUserAccessKeyId
                  AwsSecretAccessKey: !Ref QueueUserSecretAccessKey

            '/tmp/gyl-broadcaster.env':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: !Sub
                - |
                  DB_TABLE_PREFIX="${DbPrefix}"
                  AWS_REGION="${AwsRegion}"
                  AWS_ACCESS_KEY_ID=${AwsAccessKeyId}
                  AWS_SECRET_ACCESS_KEY=${AwsSecretAccessKey}

                - DbPrefix: !Ref DbTablePrefix
                  AwsRegion: !Ref AWS::Region
                  AwsAccessKeyId: !Ref BroadcastUserAccessKeyId
                  AwsSecretAccessKey: !Ref BroadcastUserSecretAccessKey

            '/etc/systemd/system/gyl-queue.service':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                [Unit]
                Description=Grow Your List Queue Service

                [Service]
                ExecStart=/usr/bin/node src/gyl-queue.js
                WorkingDirectory=/var/growyourlist/gyl-queue
                Restart=always
                SyslogIdentifier=GYL-Queue
                User=ec2-user
                Group=ec2-user
                Environment=PATH=/usr/bin:/usr/local/bin
                Environment=NODE_ENV=production

                [Install]
                WantedBy=multi-user.target

            '/etc/systemd/system/gyl-broadcaster.service':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                [Unit]
                Description=Grow Your List Broadcaster Service

                [Service]
                ExecStart=/usr/bin/node src/gyl-check-for-broadcast-trigger.js
                WorkingDirectory=/var/growyourlist/gyl-broadcaster
                Restart=always
                SyslogIdentifier=GYL-Broadcaster
                User=ec2-user
                Group=ec2-user
                Environment=PATH=/usr/bin:/usr/local/bin
                Environment=NODE_ENV=production

                [Install]
                WantedBy=multi-user.target

            '/etc/systemd/system/gyl-subscriber-count.service':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                [Unit]
                Description=Grow Your List Subscriber Count Service

                [Service]
                ExecStart=/usr/bin/node src/gyl-check-for-subscriber-count-trigger.js
                WorkingDirectory=/var/growyourlist/gyl-broadcaster
                Restart=always
                SyslogIdentifier=GYL-Subscriber-Count
                User=ec2-user
                Group=ec2-user
                Environment=PATH=/usr/bin:/usr/local/bin
                Environment=NODE_ENV=production

                [Install]
                WantedBy=multi-user.target

            '/tmp/gyl-install-dependencies.sh':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                #!/bin/bash
                # Update packages
                sudo yum update -y

                # Install Node
                curl -sL https://rpm.nodesource.com/setup_12.x | sudo bash -
                sudo yum install -y nodejs
                sudo yum install -y gcc-c++ make

                # Install Yarn
                curl -sL https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo
                sudo yum install -y yarn

                # Install Git
                sudo yum install -y git

                # Install GYL Queue
                mkdir /var/growyourlist
                git clone https://github.com/growyourlist/gyl-queue /var/growyourlist/gyl-queue
                cd /var/growyourlist/gyl-queue
                yarn install -y

                # Install GYL Broadcaster
                git clone https://github.com/growyourlist/gyl-broadcaster /var/growyourlist/gyl-broadcaster
                cd /var/growyourlist/gyl-broadcaster
                yarn install -y

            '/tmp/gyl-mv-env-files.sh':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                #!/bin/bash
                touch /tmp/attempted-mv
                mv /tmp/gyl-queue.env /var/growyourlist/gyl-queue/.env
                mv /tmp/gyl-broadcaster.env /var/growyourlist/gyl-broadcaster/.env

            '/tmp/gyl-enable-services.sh':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                #!/bin/bash
                systemctl enable gyl-queue
                systemctl enable gyl-broadcaster
                systemctl enable gyl-subscriber-count
                systemctl start gyl-queue
                systemctl start gyl-broadcaster
                systemctl start gyl-subscriber-count

          commands:
            runGyl001:
              command: 'sh /tmp/gyl-install-dependencies.sh'
            runGyl002:
              command: 'sh /tmp/gyl-mv-env-files.sh'
            runGyl003:
              command: 'sh /tmp/gyl-enable-services.sh'
  GylMainEc2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref GylMainVpc
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  # SNS Lambda Functions
  GylReactToInteractionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: GylReactToInteractionLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !Join
                    - ''
                    - - !Ref GylSubscribersTableArn
                      - /index/EmailToStatusIndex
              - Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: !Ref GylSubscribersTableArn
              - Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: !Ref GylQueueTableArn
  GylReactToInteractionLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-react-to-interaction-dist.zip
      Description: Lambda function to react to interactions with emails.
      FunctionName: GylReactToInteraction
      Handler: index.handler
      Role: !GetAtt
        - GylReactToInteractionLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          DB_TABLE_PREFIX: !Ref DbTablePrefix
  GylReactToInteractionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylReactToInteractionLambda
        - Arn
      Principal: sns.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:sns:'
          - Ref: AWS::Region
          - ':'
          - Ref: AWS::AccountId
          - ':'
          - GylOpenAndClickTopic

  GylReactToUnsubscribeEventLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: GylReactToUnsubscribeEventLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !Join
                    - ''
                    - - !Ref GylSubscribersTableArn
                      - /index/EmailToStatusIndex
              - Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: !Ref GylSubscribersTableArn
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:BatchWriteItem
                Resource: !Ref GylQueueTableArn
  GylReactToUnsubscribeEventLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-react-to-unsubscribe-event-dist.zip
      Description: Lambda function to react to unsubscribe events.
      FunctionName: GylReactToUnsubscribeEventLambda
      Handler: index.handler
      Role: !GetAtt
        - GylReactToUnsubscribeEventLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          DB_TABLE_PREFIX: !Ref DbTablePrefix
  GylReactToUnsubscribeEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylReactToUnsubscribeEventLambda
        - Arn
      Principal: sns.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:sns:'
          - Ref: AWS::Region
          - ':'
          - Ref: AWS::AccountId
          - ':'
          - GylUnsubscribeEventTopic

  GylAdminApiStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        LambdaBucketName: !Ref LambdaBucketName
        ApiAuthKeyHash: !Ref ApiAuthKeyHash
        DbTablePrefix: !Ref DbTablePrefix
        SesSourceEmail: !Ref SesSourceEmail
        GylSettingsTableArn: !Ref GylSettingsTableArn
        GylSubscribersTableArn: !Ref GylSubscribersTableArn
        GylQueueTableArn: !Ref GylQueueTableArn
        GylTemplateHistoryTableArn: !Ref GylTemplateHistoryTableArn
        GylAutoresponderHistoryTableArn: !Ref GylAutoresponderHistoryTableArn
        GylReactToInteractionLambdaArn: !GetAtt
          - GylReactToInteractionLambda
          - Arn
      TemplateURL: !Ref GylAdminApiStackTemplateUrl

  # Public API Meta
  GylPublicApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: 'GrowYourList Public API'
      Description: 'API to interact with public functions of the GrowYourList mailing list system.'
      EndpointConfiguration:
        Types:
          - REGIONAL
  GylPublicApiBetaStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref GylPublicApiDeployment
      RestApiId: !Ref GylPublicApi
      StageName: beta
  GylPublicApiCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: GylPublicApiCloudWatchPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:GetLogEvents
                  - logs:FilterLogEvents
                Resource: '*'
  GylPublicApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - GylPublicApiSubscriberUnsubscribeGet
      - GylPublicApiSubscriberUnsubscribePost
      - GylPublicApiSubscriberConfirmGet
    Properties:
      RestApiId:
        Ref: GylPublicApi
  GylPublicApiEmptyModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: application/json
      Description: This is a default empty schema model
      Name: GylPublicApiEmptyModel
      RestApiId:
        Ref: GylPublicApi
      Schema: !Join
        - ''
        - - '{'
          - '"$schema":"http://json-schema.org/draft-04/schema#",'
          - '"title":"Empty Schema",'
          - '"type":"object",'
          - '"definitions":{}'
          - '}'

  ### BEGIN PUBLIC API GENERATED PART
  GylSubscriberPostLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: GylSubscriberPostLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':*'
              -
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':log-group:/aws/lambda/GylSubscriberPost:*'
              -
                Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !Join
                    - ''
                    - - !Ref GylSubscribersTableArn
                      - /index/EmailToStatusIndex
              -
                Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:GetItem
                Resource: !Ref GylSubscribersTableArn
              -
                Effect: Allow
                Action:
                  - ses:SendEmail
                Resource: '*'
  GylSubscriberPostLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-public-subscriber-post-dist.zip
      Description: Posts a subscriber from a public location and sends confirmation email
      FunctionName: GylSubscriberPost
      Handler: index.handler
      Role: !GetAtt
        - GylSubscriberPostLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          DB_TABLE_PREFIX: !Ref DbTablePrefix
          PUBLIC_API: !Join
            - ''
            - - https://
              -
                Ref: GylPublicApi
              - .execute-api.
              -
                Ref: AWS::Region
              - .amazonaws.com/
              - beta
          SOURCE_EMAIL: !Ref SesSourceEmail
          DEFAULT_LIST: list-default
  GylSubscriberPostPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylSubscriberPostLambda
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - 
            Ref: AWS::Region
          - ':'
          -
            Ref: AWS::AccountId
          - ':'
          -
            Ref: GylPublicApi
          - '/*'
  GylPublicApiSubscriberPost:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylSubscriberPostPermission
    Properties:
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            -
              Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            -
              !GetAtt
                - GylSubscriberPostLambda
                - Arn
            - /invocations
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylPublicApiSubscriberOptions:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylPublicApiEmptyModel
    Properties:
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
          ResponseModels:
            application/json: GylPublicApiEmptyModel
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Gyl-Auth-Key'
              method.response.header.Access-Control-Allow-Methods: >-
                'POST,OPTIONS'
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylPublicApiSubscriberResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: GylPublicApi
      ParentId: !GetAtt
        - GylPublicApi
        - RootResourceId
      PathPart: subscriber
  GylSubscriberConfirmGetLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: GylSubscriberConfirmGetLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':*'
              -
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':log-group:/aws/lambda/GylSubscriberConfirmGet:*'
              -
                Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: !Ref GylSubscribersTableArn
              -
                Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: !Ref GylSubscribersTableArn
              -
                Effect: Allow
                Action:
                  - dynamodb:Settings
                Resource: !Ref GylSettingsTableArn
  GylSubscriberConfirmGetLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-public-subscriber-confirm-get-dist.zip
      Description: Confirms a subscriber in response to link click
      FunctionName: GylSubscriberConfirmGet
      Handler: index.handler
      Role: !GetAtt
        - GylSubscriberConfirmGetLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          DB_TABLE_PREFIX: !Ref DbTablePrefix
          THANKYOU_URL: https://www.growyourlist.com/thank-you.html
  GylSubscriberConfirmGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylSubscriberConfirmGetLambda
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - 
            Ref: AWS::Region
          - ':'
          -
            Ref: AWS::AccountId
          - ':'
          -
            Ref: GylPublicApi
          - '/*'
  GylPublicApiSubscriberConfirmGet:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylSubscriberConfirmGetPermission
    Properties:
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberConfirmResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            -
              Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            -
              !GetAtt
                - GylSubscriberConfirmGetLambda
                - Arn
            - /invocations
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylPublicApiSubscriberConfirmOptions:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylPublicApiEmptyModel
    Properties:
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberConfirmResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
          ResponseModels:
            application/json: GylPublicApiEmptyModel
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Gyl-Auth-Key'
              method.response.header.Access-Control-Allow-Methods: >-
                'GET,OPTIONS'
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylPublicApiSubscriberConfirmResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: GylPublicApi
      ParentId: !Ref GylPublicApiSubscriberResource
      PathPart: confirm
  GylSubscriberUnsubscribeGetLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: GylSubscriberUnsubscribeGetLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':*'
              -
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':log-group:/aws/lambda/GylSubscriberUnsubscribeGet:*'
              -
                Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                  - dynamodb:GetItem
                Resource: !Ref GylSubscribersTableArn
              -
                Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: !Ref GylSettingsTableArn
  GylSubscriberUnsubscribeGetLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-public-subscriber-unsubscribe-get-dist.zip
      Description: Gets a public unsubscribe request
      FunctionName: GylSubscriberUnsubscribeGet
      Handler: index.handler
      Role: !GetAtt
        - GylSubscriberUnsubscribeGetLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          PUBLIC_API: !Join
            - ''
            - - https://
              -
                Ref: GylPublicApi
              - .execute-api.
              -
                Ref: AWS::Region
              - .amazonaws.com/
              - beta
          GLOBAL_UNSUBSCRIBE_URL: https://unsubscribe.growyourlist.com/
          DB_TABLE_PREFIX: !Ref DbTablePrefix
  GylSubscriberUnsubscribeGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylSubscriberUnsubscribeGetLambda
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - 
            Ref: AWS::Region
          - ':'
          -
            Ref: AWS::AccountId
          - ':'
          -
            Ref: GylPublicApi
          - '/*'
  GylPublicApiSubscriberUnsubscribeGet:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylSubscriberUnsubscribeGetPermission
    Properties:
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberUnsubscribeResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            -
              Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            -
              !GetAtt
                - GylSubscriberUnsubscribeGetLambda
                - Arn
            - /invocations
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylSubscriberUnsubscribePostLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: GylSubscriberUnsubscribePostLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':*'
              -
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':log-group:/aws/lambda/GylSubscriberUnsubscribePost:*'
              -
                Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !Join
                    - ''
                    - - !Ref GylSubscribersTableArn
                      - /index/EmailToStatusIndex
              -
                Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: !Ref GylSubscribersTableArn
              -
                Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !Join
                    - ''
                    - - !Ref GylQueueTableArn
                      - /index/SubscriberIdIndex
              -
                Effect: Allow
                Action:
                  - dynamodb:BatchWriteItem
                Resource: !Ref GylQueueTableArn
  GylSubscriberUnsubscribePostLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-public-subscriber-unsubscribe-post-dist.zip
      Description: Posts a public unsubscribe request
      FunctionName: GylSubscriberUnsubscribePost
      Handler: index.handler
      Role: !GetAtt
        - GylSubscriberUnsubscribePostLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          DB_TABLE_PREFIX: !Ref DbTablePrefix
  GylSubscriberUnsubscribePostPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylSubscriberUnsubscribePostLambda
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - 
            Ref: AWS::Region
          - ':'
          -
            Ref: AWS::AccountId
          - ':'
          -
            Ref: GylPublicApi
          - '/*'
  GylPublicApiSubscriberUnsubscribePost:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylSubscriberUnsubscribePostPermission
    Properties:
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberUnsubscribeResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            -
              Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            -
              !GetAtt
                - GylSubscriberUnsubscribePostLambda
                - Arn
            - /invocations
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylPublicApiSubscriberUnsubscribeOptions:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylPublicApiEmptyModel
    Properties:
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberUnsubscribeResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
          ResponseModels:
            application/json: GylPublicApiEmptyModel
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Gyl-Auth-Key'
              method.response.header.Access-Control-Allow-Methods: >-
                'GET,POST,OPTIONS'
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylPublicApiSubscriberUnsubscribeResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: GylPublicApi
      ParentId: !Ref GylPublicApiSubscriberResource
      PathPart: unsubscribe
  ### END PUBLIC API GENERATED PART

  # SNS
  GylOpenAndClickTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !GetAtt
            - GylReactToInteractionLambda
            - Arn
          Protocol: lambda
      TopicName: GylOpenAndClickTopic
  GylUnsubscribeEventTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !GetAtt
            - GylReactToUnsubscribeEventLambda
            - Arn
          Protocol: lambda
      TopicName: GylUnsubscribeEventTopic
  GylSesFailureEventTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref AdminEmail
          Protocol: email
      TopicName: GylSesFailureEventTopic

  # SES
  GylSesConfigurationSet:
    Type: AWS::SES::ConfigurationSet
    Properties:
      Name: GylSesConfigurationSet

Outputs:
  GylMainEc2Hostname:
    Description: 'EC2 Hostname'
    Value: !Join
      - ''
      - - !GetAtt
          - GylMainEc2
          - PublicDnsName
  GylPublicApiUrl:
    Description: 'GYL Public API Url'
    Value: !Join
      - ''
      - - https://
        - Ref: GylPublicApi
        - .execute-api.
        - Ref: AWS::Region
        - .amazonaws.com/
  GylPublicApiBetaStage:
    Description: 'GYL Public API Stage'
    Value: !Ref GylPublicApiBetaStage
  GylAdminApiUrl:
    Description: 'GYL Admin API Url'
    Value: !Join
      - ''
      - - https://
        - !GetAtt
          - GylAdminApiStack
          - Outputs.GylAdminApi
        - .execute-api.
        - Ref: AWS::Region
        - .amazonaws.com/
  GylAdminApiBetaStage:
    Description: 'GYL Admin API Stage'
    Value: !GetAtt
      - GylAdminApiStack
      - Outputs.GylAdminApiBetaStage
  GylSesConfigurationSet:
    Description: GylSesConfigurationSet
    Value: !Ref GylSesConfigurationSet
  GylOpenAndClickTopic:
    Description: GylOpenAndClickTopic
    Value: !Ref GylOpenAndClickTopic
  GylUnsubscribeEventTopic:
    Description: GylUnsubscribeEventTopic
    Value: !Ref GylUnsubscribeEventTopic
  GylSesFailureEventTopic:
    Description: GylSesFailureEventTopic
    Value: !Ref GylSesFailureEventTopic
