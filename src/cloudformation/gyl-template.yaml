Parameters:
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the GylEC2Main instance
    Type: AWS::EC2::KeyPair::KeyName
  GylVersion:
    Description: GYL Version
    Type: String
  LambdaBucketName:
    Description: Lambda Bucket
    Type: String
  ApiAuthKeyHash:
    Description: Key for authorizing API requests
    Type: String
  DbTablePrefix:
    Description: Prefix for DynamoDB tables
    Type: String
  SesSourceEmail:
    Description: Source email used by SES
    Type: String
  AdminEmail:
    Description: Email to receive errors and other GYL operating information
    Type: String
  QueueUserAccessKeyId:
    Description: The id of the access key used by GYL Queue system
    Type: String
  QueueUserSecretAccessKey:
    Description: The secret access key used by GYL Queue system
    Type: String
  BroadcastUserAccessKeyId:
    Description: The id of the access key used by GYL Broadcast system
    Type: String
  BroadcastUserSecretAccessKey:
    Description: The secret access key used by GYL Broadcast system
    Type: String
  GylSettingsTableArn:
    Description: Arn of the Settings DynamoDB table
    Type: String
  GylSubscribersTableArn:
    Description: Arn of the Subscribers DynamoDB table
    Type: String
  GylQueueTableArn:
    Description: Arn of the Queue DynamoDB table
    Type: String
  GylAdminApiStackTemplateUrl:
    Description: The url of the admin api stack.
    Type: String

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-062f7200baf2fa504
    us-east-2:
      AMI: ami-02ccb28830b645a41
    us-west-1:
      AMI: ami-03caa3f860895f82e
    us-west-2:
      AMI: ami-04590e7389a6e577c
    sa-east-1:
      AMI: ami-09de7b4017733e2af
    eu-north-1:
      AMI: ami-0662eb9b9b8685935
    eu-west-3:
      AMI: ami-007fae589fdf6e955
    eu-west-2:
      AMI: ami-0089b31e09ac3fffc
    eu-west-1:
      AMI: ami-0713f98de93617bb4
    eu-central-1:
      AMI: ami-07cda0db070313c52
    ca-central-1:
      AMI: ami-0a269ca7cc3e3beff
    ap-northeast-1:
      AMI: ami-011facbea5ec0363b
    ap-southeast-2:
      AMI: ami-0b8b10b5bf11f3a22
    ap-southeast-1:
      AMI: ami-05c64f7b4062b0a21

Resources:
  # EC2
  GylEC2Main:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: 't2.micro'
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref GylEC2MainSecurityGroup
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      BlockDeviceMappings:
        - DeviceName: '/dev/xvda'
          Ebs:
            VolumeType: 'gp2'
            VolumeSize: '8'
            DeleteOnTermination: 'true'
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              # Install the files and packages from the metadata
            - '/opt/aws/bin/cfn-init -v'
            - ' --stack '
            - !Ref 'AWS::StackName'
            - ' --resource GylEC2Main'
            - ' --region '
            - !Ref 'AWS::Region'
            - ' --configsets installGylDependencies'
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          installGylDependencies:
            - installGylDependencies
        installGylDependencies:
          files:
            '/tmp/gyl-queue.env':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: !Sub
                - |
                  SOURCE_EMAIL=${SourceEmail}
                  FALLBACK_SOURCE_EMAIL=${FallbackSourceEmail}
                  UNSUBSCRIBE_LINK_TEMPLATE=${UnsubscribeLinkTemplate}
                  DB_TABLE_PREFIX="${DbPrefix}"
                  AWS_REGION="${AwsRegion}"
                  AWS_ACCESS_KEY_ID=${AwsAccessKeyId}
                  AWS_SECRET_ACCESS_KEY=${AwsSecretAccessKey}

                -
                  SourceEmail: !Ref SesSourceEmail
                  FallbackSourceEmail: !Ref SesSourceEmail
                  UnsubscribeLinkTemplate: 'test'
                  DbPrefix: !Ref DbTablePrefix
                  AwsRegion: !Ref AWS::Region
                  AwsAccessKeyId: !Ref QueueUserAccessKeyId
                  AwsSecretAccessKey: !Ref QueueUserSecretAccessKey

            '/tmp/gyl-broadcaster.env':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: !Sub
                - |
                  DB_TABLE_PREFIX="${DbPrefix}"
                  AWS_REGION="${AwsRegion}"
                  AWS_ACCESS_KEY_ID=${AwsAccessKeyId}
                  AWS_SECRET_ACCESS_KEY=${AwsSecretAccessKey}

                - 
                  DbPrefix: !Ref DbTablePrefix
                  AwsRegion: !Ref AWS::Region
                  AwsAccessKeyId: !Ref BroadcastUserAccessKeyId
                  AwsSecretAccessKey: !Ref BroadcastUserSecretAccessKey

            '/etc/systemd/system/gyl-queue.service':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                [Unit]
                Description=Grow Your List Queue Service

                [Service]
                ExecStart=/usr/bin/node src/gyl-queue.js
                WorkingDirectory=/var/growyourlist/gyl-queue
                Restart=always
                SyslogIdentifier=GYL-Queue
                User=ec2-user
                Group=ec2-user
                Environment=PATH=/usr/bin:/usr/local/bin
                Environment=NODE_ENV=production

                [Install]
                WantedBy=multi-user.target

            '/etc/systemd/system/gyl-broadcaster.service':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                [Unit]
                Description=Grow Your List Broadcaster Service

                [Service]
                ExecStart=/usr/bin/node src/gyl-check-for-broadcast-trigger.js
                WorkingDirectory=/var/growyourlist/gyl-broadcaster
                Restart=always
                SyslogIdentifier=GYL-Broadcaster
                User=ec2-user
                Group=ec2-user
                Environment=PATH=/usr/bin:/usr/local/bin
                Environment=NODE_ENV=production

                [Install]
                WantedBy=multi-user.target

            '/etc/systemd/system/gyl-subscriber-count.service':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                [Unit]
                Description=Grow Your List Subscriber Count Service

                [Service]
                ExecStart=/usr/bin/node src/gyl-check-for-subscriber-count-trigger.js
                WorkingDirectory=/var/growyourlist/gyl-broadcaster
                Restart=always
                SyslogIdentifier=GYL-Subscriber-Count
                User=ec2-user
                Group=ec2-user
                Environment=PATH=/usr/bin:/usr/local/bin
                Environment=NODE_ENV=production

                [Install]
                WantedBy=multi-user.target

            '/tmp/gyl-install-dependencies.sh':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                #!/bin/bash
                # Update packages
                sudo yum update -y

                # Install Node
                curl -sL https://rpm.nodesource.com/setup_12.x | sudo bash -
                sudo yum install -y nodejs
                sudo yum install -y gcc-c++ make

                # Install Yarn
                curl -sL https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo
                sudo yum install -y yarn

                # Install Git
                sudo yum install -y git

                # Install GYL Queue
                mkdir /var/growyourlist
                git clone https://github.com/growyourlist/gyl-queue /var/growyourlist/gyl-queue
                cd /var/growyourlist/gyl-queue
                yarn install -y

                # Install GYL Broadcaster
                git clone https://github.com/growyourlist/gyl-broadcaster /var/growyourlist/gyl-broadcaster
                cd /var/growyourlist/gyl-broadcaster
                yarn install -y

            '/tmp/gyl-mv-env-files.sh':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                #!/bin/bash
                touch /tmp/attempted-mv
                mv /tmp/gyl-queue.env /var/growyourlist/gyl-queue/.env
                mv /tmp/gyl-broadcaster.env /var/growyourlist/gyl-broadcaster/.env

            '/tmp/gyl-enable-services.sh':
              encoding: plain
              mode: '000644'
              owner: root
              group: root
              content: |
                #!/bin/bash
                systemctl enable gyl-queue
                systemctl enable gyl-broadcaster
                systemctl enable gyl-subscriber-count
                systemctl start gyl-queue
                systemctl start gyl-broadcaster
                systemctl start gyl-subscriber-count

          commands:
            runGyl001:
              command: 'sh /tmp/gyl-install-dependencies.sh'
            runGyl002:
              command: 'sh /tmp/gyl-mv-env-files.sh'
            runGyl003:
              command: 'sh /tmp/gyl-enable-services.sh'
  GylEC2MainSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Enable SSH access via port 22
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '22'
            ToPort: '22'
            CidrIp: 0.0.0.0/0

  GylAdminApiStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        LambdaBucketName: !Ref LambdaBucketName
        ApiAuthKeyHash: !Ref ApiAuthKeyHash
        DbTablePrefix: !Ref DbTablePrefix
        SesSourceEmail: !Ref SesSourceEmail
        GylSettingsTableArn: !Ref GylSettingsTableArn
        GylSubscribersTableArn: !Ref GylSubscribersTableArn
        GylQueueTableArn: !Ref GylQueueTableArn
      TemplateURL: !Ref GylAdminApiStackTemplateUrl

  # Public API Meta
  GylPublicApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: 'GrowYourList Public API'
      Description: 'API to interact with public functions of the GrowYourList mailing list system.'
      EndpointConfiguration:
        Types:
          - REGIONAL
  GylPublicApiBetaStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref GylPublicApiDeployment
      RestApiId: !Ref GylPublicApi
      StageName: beta
  GylPublicApiCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        -
          PolicyName: GylPublicApiCloudWatchPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:GetLogEvents
                  - logs:FilterLogEvents
                Resource: '*'
  GylPublicApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - GylPublicApiSubscriberUnsubscribeGet
      - GylPublicApiSubscriberUnsubscribePost
      - GylPublicApiSubscriberConfirmGet
    Properties:
      RestApiId:
        Ref: GylPublicApi
  GylPublicApiEmptyModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: application/json
      Description: This is a default empty schema model
      Name: GylPublicApiEmptyModel
      RestApiId:
        Ref: GylPublicApi
      Schema: !Join
        - ''
        - - '{'
          - '"$schema":"http://json-schema.org/draft-04/schema#",'
          - '"title":"Empty Schema",'
          - '"type":"object",'
          - '"definitions":{}'
          - '}'

  ### BEGIN PUBLIC API GENERATED PART
  GylPublicApiSubscriberResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: GylPublicApi
      ParentId: !GetAtt
        - GylPublicApi
        - RootResourceId
      PathPart: subscriber
  GylSubscriberConfirmGetLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: GylSubscriberConfirmGetLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':*'
              -
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':log-group:/aws/lambda/GylSubscriberConfirmGet:*'
              -
                Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: !Ref GylSubscribersTableArn
              -
                Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: !Ref GylSubscribersTableArn
              -
                Effect: Allow
                Action:
                  - dynamodb:Settings
                Resource: !Ref GylSettingsTableArn
  GylSubscriberConfirmGetLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-public-subscriber-confirm-get-dist.zip
      Description: Confirms a subscriber in response to link click
      FunctionName: GylSubscriberConfirmGet
      Handler: index.handler
      Role: !GetAtt
        - GylSubscriberConfirmGetLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          DB_TABLE_PREFIX: !Ref DbTablePrefix
  GylSubscriberConfirmGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylSubscriberConfirmGetLambda
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - 
            Ref: AWS::Region
          - ':'
          -
            Ref: AWS::AccountId
          - ':'
          -
            Ref: GylPublicApi
          - '/*'
  GylPublicApiSubscriberConfirmGet:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylSubscriberConfirmGetPermission
    Properties:
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberConfirmResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            -
              Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            -
              !GetAtt
                - GylSubscriberConfirmGetLambda
                - Arn
            - /invocations
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylPublicApiSubscriberConfirmOptions:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylPublicApiEmptyModel
    Properties:
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberConfirmResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
          ResponseModels:
            application/json: GylPublicApiEmptyModel
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Gyl-Auth-Key'
              method.response.header.Access-Control-Allow-Methods: >-
                'GET,OPTIONS'
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylPublicApiSubscriberConfirmResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: GylPublicApi
      ParentId: !Ref GylPublicApiSubscriberResource
      PathPart: confirm
  GylSubscriberUnsubscribeGetLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: GylSubscriberUnsubscribeGetLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':*'
              -
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':log-group:/aws/lambda/GylSubscriberUnsubscribeGet:*'
              -
                Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                  - dynamodb:GetItem
                Resource: !Ref GylSubscribersTableArn
              -
                Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource: !Ref GylSettingsTableArn
  GylSubscriberUnsubscribeGetLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-public-subscriber-unsubscribe-get-dist.zip
      Description: Gets a public unsubscribe request
      FunctionName: GylSubscriberUnsubscribeGet
      Handler: index.handler
      Role: !GetAtt
        - GylSubscriberUnsubscribeGetLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          PUBLIC_API: !Join
            - ''
            - - https://
              -
                Ref: GylPublicApi
              - .execute-api.
              -
                Ref: AWS::Region
              - .amazonaws.com/
              - beta
          GLOBAL_UNSUBSCRIBE_URL: https://www.growyourlist.com/unsubscribe/
          DB_TABLE_PREFIX: !Ref DbTablePrefix
  GylSubscriberUnsubscribeGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylSubscriberUnsubscribeGetLambda
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - 
            Ref: AWS::Region
          - ':'
          -
            Ref: AWS::AccountId
          - ':'
          -
            Ref: GylPublicApi
          - '/*'
  GylPublicApiSubscriberUnsubscribeGet:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylSubscriberUnsubscribeGetPermission
    Properties:
      HttpMethod: GET
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberUnsubscribeResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            -
              Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            -
              !GetAtt
                - GylSubscriberUnsubscribeGetLambda
                - Arn
            - /invocations
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylSubscriberUnsubscribePostLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: GylSubscriberUnsubscribePostLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':*'
              -
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Join
                  - ''
                  - - 'arn:aws:logs:'
                    - 
                      Ref: AWS::Region
                    - ':'
                    -
                      Ref: AWS::AccountId
                    - ':log-group:/aws/lambda/GylSubscriberUnsubscribePost:*'
              -
                Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !Join
                    - ''
                    - - !Ref GylSubscribersTableArn
                      - /index/EmailToStatusIndex
              -
                Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: !Ref GylSubscribersTableArn
              -
                Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !Join
                    - ''
                    - - !Ref GylQueueTableArn
                      - /index/SubscriberIdIndex
              -
                Effect: Allow
                Action:
                  - dynamodb:BatchWriteItem
                Resource: !Ref GylQueueTableArn
  GylSubscriberUnsubscribePostLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-public-subscriber-unsubscribe-post-dist.zip
      Description: Posts a public unsubscribe request
      FunctionName: GylSubscriberUnsubscribePost
      Handler: index.handler
      Role: !GetAtt
        - GylSubscriberUnsubscribePostLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          DB_TABLE_PREFIX: !Ref DbTablePrefix
  GylSubscriberUnsubscribePostPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylSubscriberUnsubscribePostLambda
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - 
            Ref: AWS::Region
          - ':'
          -
            Ref: AWS::AccountId
          - ':'
          -
            Ref: GylPublicApi
          - '/*'
  GylPublicApiSubscriberUnsubscribePost:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylSubscriberUnsubscribePostPermission
    Properties:
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberUnsubscribeResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            -
              Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            -
              !GetAtt
                - GylSubscriberUnsubscribePostLambda
                - Arn
            - /invocations
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylPublicApiSubscriberUnsubscribeOptions:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - GylPublicApiEmptyModel
    Properties:
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      ApiKeyRequired: false
      RequestParameters: {}
      ResourceId:
        Ref: GylPublicApiSubscriberUnsubscribeResource
      RestApiId:
        Ref: GylPublicApi
      MethodResponses:
        -
          StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
          ResponseModels:
            application/json: GylPublicApiEmptyModel
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
          -
            StatusCode: '200'
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Gyl-Auth-Key'
              method.response.header.Access-Control-Allow-Methods: >-
                'GET,POST,OPTIONS'
              method.response.header.Access-Control-Allow-Origin: "'*'"
  GylPublicApiSubscriberUnsubscribeResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: GylPublicApi
      ParentId: !Ref GylPublicApiSubscriberResource
      PathPart: unsubscribe
  ### END PUBLIC API GENERATED PART

  # SNS Lambda Functions
  GylReactToInteractionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: GylReactToInteractionLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !Join
                    - ''
                    - - !Ref GylSubscribersTableArn
                      - /index/EmailToStatusIndex
              -
                Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: !Ref GylSubscribersTableArn
              -
                Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: !Ref GylQueueTableArn
  GylReactToInteractionLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-react-to-interaction-dist.zip
      Description: Lambda function to react to interactions with emails.
      FunctionName: GylReactToInteraction
      Handler: index.handler
      Role: !GetAtt
        - GylReactToInteractionLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          DB_TABLE_PREFIX: !Ref DbTablePrefix
  GylReactToInteractionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylReactToInteractionLambda
        - Arn
      Principal: sns.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:sns:'
          -
            Ref: AWS::Region
          - ':'
          -
            Ref: AWS::AccountId
          - ':'
          - GylOpenAndClickTopic

  GylReactToUnsubscribeEventLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        -
          PolicyName: GylReactToUnsubscribeEventLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action:
                  - dynamodb:Query
                Resource:
                  - !Join
                    - ''
                    - - !Ref GylSubscribersTableArn
                      - /index/EmailToStatusIndex
              -
                Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource: !Ref GylSubscribersTableArn
              - 
                Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:BatchWriteItem
                Resource: !Ref GylQueueTableArn
  GylReactToUnsubscribeEventLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: gyl-react-to-unsubscribe-event-dist.zip
      Description: Lambda function to react to unsubscribe events.
      FunctionName: GylReactToUnsubscribeEventLambda
      Handler: index.handler
      Role: !GetAtt
        - GylReactToUnsubscribeEventLambdaRole
        - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          DB_TABLE_PREFIX: !Ref DbTablePrefix
  GylReactToUnsubscribeEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt
        - GylReactToUnsubscribeEventLambda
        - Arn
      Principal: sns.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:sns:'
          -
            Ref: AWS::Region
          - ':'
          -
            Ref: AWS::AccountId
          - ':'
          - GylUnsubscribeEventTopic

  # SNS
  GylOpenAndClickTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        -
          Endpoint: !GetAtt
            - GylReactToInteractionLambda
            - Arn
          Protocol: lambda
      TopicName: GylOpenAndClickTopic
  GylUnsubscribeEventTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        -
          Endpoint: !GetAtt
            - GylReactToUnsubscribeEventLambda
            - Arn
          Protocol: lambda
      TopicName: GylUnsubscribeEventTopic
  GylSesFailureEventTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        -
          Endpoint: !Ref AdminEmail
          Protocol: email
      TopicName: GylSesFailureEventTopic

  # SES
  GylSesConfigurationSet:
    Type: AWS::SES::ConfigurationSet
    Properties:
      Name: GylSesConfigurationSet

Outputs:
  GylEC2MainHostname:
    Description: 'EC2 Hostname'
    Value: !Join
      - ''
      - - !GetAtt
          - GylEC2Main
          - PublicDnsName
  GylPublicApiUrl:
    Description: 'GYL Public API Url'
    Value: !Join
      - ''
      - - https://
        -
          Ref: GylPublicApi
        - .execute-api.
        -
          Ref: AWS::Region
        - .amazonaws.com/
  GylPublicApiBetaStage:
    Description: 'GYL Public API Stage'
    Value: !Ref GylPublicApiBetaStage
  GylAdminApiUrl:
    Description: 'GYL Admin API Url'
    Value: !Join
      - ''
      - - https://
        - !GetAtt 
          - GylAdminApiStack
          - Outputs.GylAdminApi
        - .execute-api.
        -
          Ref: AWS::Region
        - .amazonaws.com/
  GylAdminApiBetaStage:
    Description: 'GYL Admin API Stage'
    Value: !GetAtt 
      - GylAdminApiStack
      - Outputs.GylAdminApiBetaStage
  GylSesConfigurationSet:
    Description: GylSesConfigurationSet
    Value: !Ref GylSesConfigurationSet
  GylOpenAndClickTopic:
    Description: GylOpenAndClickTopic
    Value: !Ref GylOpenAndClickTopic
  GylUnsubscribeEventTopic:
    Description: GylUnsubscribeEventTopic
    Value: !Ref GylUnsubscribeEventTopic
  GylSesFailureEventTopic:
    Description: GylSesFailureEventTopic
    Value: !Ref GylSesFailureEventTopic
